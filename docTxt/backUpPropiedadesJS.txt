// Datos de Propiedades
const propiedades = [
    {
        id: 1,
        tipo: "venta",
        titulo: "Casa Moderna en Venta",
        precio: 150000,
        localidad: "Córdoba",
        imagenes: [
            "/images/carouselHome/CasaLD-01.jpeg",
            "/images/carouselHome/CasaLD-12.jpeg",
            "/images/carouselHome/CasaLD-00.jpeg"
        ],
        tieneVista360: false
    },
    {
        id: 2,
        tipo: "alquiler",
        titulo: "Departamento en Alquiler",
        precio: 50000,
        localidad: "Buenos Aires",
        imagenes: [
            "/images/carouselHome/CasaLD-12.jpeg",
            "/images/carouselHome/CasaLD-00.jpeg"
        ]
    },
    {
        id: 3,
        tipo: "alquiler-temporario",
        titulo: "Casa de Vacaciones",
        precio: 120000,
        localidad: "Mendoza",
        imagenes: [
            "/images/carouselHome/CasaLD-01.jpeg",
            "/images/carouselHome/CasaLD-00.jpeg",
            "/images/carouselHome/CasaLD-12.jpeg"
        ],
        tieneVista360: false
    },
    {
        id: 4,
        tipo: "venta",
        titulo: "Departamento de Lujo",
        precio: 200000,
        localidad: "Rosario",
        imagenes: [
            "/images/carouselHome/CasaLD-01.jpeg",
            "/images/carouselHome/CasaLD-12.jpeg"
        ],
        tieneVista360: false
    },
    {
        id: 5,
        tipo: "venta",
        titulo: "Casa con Jardín",
        precio: 180000,
        localidad: "Salta",
        imagenes: [
            "/images/carouselHome/CasaLD-01.jpeg",
            "/images/carouselHome/CasaLD-12.jpeg"
        ],
        tieneVista360: false
    },
    {
        id: 6,
        tipo: "alquiler",
        titulo: "Apartamento Económico",
        precio: 30000,
        localidad: "San Juan",
        imagenes: [
            "/images/carouselHome/CasaLD-00.jpeg",
            "/images/carouselHome/CasaLD-12.jpeg"
        ]
    },
    {
        id: 7,
        tipo: "alquiler-temporario",
        titulo: "Villa Vacacional",
        precio: 250000,
        localidad: "Bariloche",
        imagenes: [
            "/images/carouselHome/CasaLD-12.jpeg",
            "/images/carouselHome/CasaLD-00.jpeg",
            "/images/carouselHome/CasaLD-01.jpeg"
        ],
        tieneVista360: false
    },
    {
        id: 8,
        tipo: "venta",
        titulo: "Casa Familiar",
        precio: 170000,
        localidad: "Mar del Plata",
        imagenes: [
            "/images/carouselHome/CasaLD-01.jpeg",
            "/images/carouselHome/CasaLD-00.jpeg"
        ],
        tieneVista360: false
    }
];

// Renderizar Propiedades
function renderProperties(data) {
    const container = document.getElementById("propiedadesContainer");
    container.innerHTML = data.map((prop) => `
      <div class="col-md-4">
        <div class="card">
          <div class="swiper-container" id="swiper-${prop.id}">
            <div class="swiper-wrapper">
              ${prop.imagenes
                .map((img) => `<div class="swiper-slide"><img src="${img}" class="img-fluid" alt="${prop.titulo}"></div>`)
                .join("")}
            </div>
            <div class="swiper-pagination visores"></div>
          </div>
          <div class="card-body">
            <h5 class="card-title">${prop.titulo}</h5>
            <p class="card-text">Precio: $${prop.precio.toLocaleString()}</p>
            <p class="card-text">Localidad: ${prop.localidad}</p>
            ${
              prop.tieneVista360
                ? `<button class="btn btn-primary mb-2" onclick="open360(${prop.id})">Vista 360°</button>`
                : ""
            }
            <button class="btn btn-info mb-2" onclick="viewPropertyDetails(${prop.id})">Ver más info</button>
            <button class="btn btn-secondary" onclick="goToContact('${prop.titulo}')">Me interesa</button>
          </div>
        </div>
      </div>
    `).join("");

    // Inicializar carruseles
    data.forEach((prop) => {
        new Swiper(`#swiper-${prop.id}`, {
            loop: true,
            pagination: {
                el: `.swiper-pagination`,
                clickable: true
            }
        });
    });
}

// Ver detalles de la propiedad
function viewPropertyDetails(id) {
    const property = propiedades.find((prop) => prop.id === id);
    if (property) {
        // Rellenar el contenido del modal dinámicamente
        const content = `
          <div class="text-center">
            <h3>${property.titulo}</h3>
            <p><strong>Precio:</strong> $${property.precio.toLocaleString()}</p>
            <p><strong>Localidad:</strong> ${property.localidad}</p>
          </div>
          <div class="swiper-container" id="modal-swiper-${property.id}">
            <div class="swiper-wrapper" id="hiddenOverflow">
              ${property.imagenes
                .map((img) => `<div class="swiper-slide"><img src="${img}" class="img-fluid" alt="${property.titulo}"></div>`)
                .join("")}
            </div>
            <div class="swiper-pagination"></div>
          </div>
        `;
        document.getElementById("propertyDetailsContent").innerHTML = content;

        // Inicializar Swiper dentro del modal
        new Swiper(`#modal-swiper-${property.id}`, {
            loop: true,
            pagination: {
                el: `.swiper-pagination`,
                clickable: true,
            },
        });

        // Mostrar el modal
        new bootstrap.Modal(document.getElementById("propertyDetailsModal")).show();
    }
}

// Render inicial
renderProperties(propiedades);



// Redirigir al Formulario de Contacto
function goToContact(propiedad) {
    document.getElementById("propiedadInteres").value = propiedad;
    document.getElementById("contacto").scrollIntoView({ behavior: "smooth" });
}

// Filtros en Tiempo Real
document.querySelectorAll("#filtros input, #filtros select").forEach((input) =>
    input.addEventListener("input", () => {
        const tipo = document.getElementById("tipoPropiedad").value;
        const precioMaximo = document.getElementById("precioMaximo").value;
        const localidad = document.getElementById("localidad").value.toLowerCase();

        const filtered = propiedades.filter((prop) => {
            return (
                (tipo === "all" || prop.tipo === tipo) &&
                (!precioMaximo || prop.precio <= precioMaximo) &&
                (!localidad || prop.localidad.toLowerCase().includes(localidad))
            );
        });

        renderProperties(filtered);
    })
);

// Render inicial
renderProperties(propiedades);





// Obtén los parámetros de la URL
function getQueryParams() {
    const params = new URLSearchParams(window.location.search);
    return {
        tipo: params.get('tipo') || 'all',
    };
}

// Aplica los filtros iniciales según los parámetros de la URL
function applyInitialFilters() {
    const { tipo } = getQueryParams();

    // Selecciona el filtro en el dropdown o input
    const tipoDropdown = document.getElementById('tipoPropiedad');
    if (tipoDropdown && tipo !== 'all') {
        tipoDropdown.value = tipo;
    }

    // Filtrar las propiedades con los datos iniciales
    const filtered = propiedades.filter((prop) => tipo === 'all' || prop.tipo === tipo);
    renderProperties(filtered);
}

// Ejecuta los filtros iniciales al cargar la página
document.addEventListener('DOMContentLoaded', () => {
    applyInitialFilters();
});

// Filtros en Tiempo Real (existente)
document.querySelectorAll("#filtros input, #filtros select").forEach((input) =>
    input.addEventListener("input", () => {
        const tipo = document.getElementById("tipoPropiedad").value;
        const precioMaximo = document.getElementById("precioMaximo").value;
        const localidad = document.getElementById("localidad").value.toLowerCase();

        const filtered = propiedades.filter((prop) => {
            return (
                (tipo === "all" || prop.tipo === tipo) &&
                (!precioMaximo || prop.precio <= precioMaximo) &&
                (!localidad || prop.localidad.toLowerCase().includes(localidad))
            );
        });

        renderProperties(filtered);
    })
);
